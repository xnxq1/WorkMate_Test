"""Change int id to uuid

Revision ID: 599a3d4bdd57
Revises: 18ffb526e850
Create Date: 2024-10-02 08:21:35.606192

"""
from typing import Sequence, Union
from sqlalchemy.dialects.postgresql import UUID
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '599a3d4bdd57'
down_revision: Union[str, None] = '18ffb526e850'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.add_column('Breed', sa.Column('new_id', UUID(as_uuid=True),
                                     server_default=sa.text('gen_random_uuid()')))

    op.execute('UPDATE "Breed" SET new_id = gen_random_uuid();')

    op.drop_constraint('Cat_breed_id_fkey', 'Cat', type_='foreignkey')

    op.drop_column('Breed', 'id')

    op.alter_column('Breed', 'new_id', new_column_name='id')

    op.create_unique_constraint('uq_breed_name', 'Breed', ['name'])
    op.create_unique_constraint('uq_breed_id', 'Breed', ['id'])

    op.add_column('Cat', sa.Column('new_id', UUID(as_uuid=True),
                                   server_default=sa.text('gen_random_uuid()')))

    op.execute('UPDATE "Cat" SET new_id = gen_random_uuid();')

    op.drop_column('Cat', 'id')

    op.alter_column('Cat', 'new_id', new_column_name='id')

    op.add_column('Cat', sa.Column('new_breed_id', UUID(as_uuid=True)))

    op.execute('UPDATE "Cat" SET new_breed_id = NULL;')

    op.drop_column('Cat', 'breed_id')

    op.alter_column('Cat', 'new_breed_id', new_column_name='breed_id')

    op.create_unique_constraint('uq_cat_id', 'Cat', ['id'])

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'Cat', type_='unique')
    op.alter_column('Cat', 'breed_id',
               existing_type=sa.Uuid(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('Cat', 'id',
               existing_type=sa.Uuid(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_constraint(None, 'Breed', type_='unique')
    op.drop_constraint(None, 'Breed', type_='unique')
    op.alter_column('Breed', 'id',
               existing_type=sa.Uuid(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    # ### end Alembic commands ###
